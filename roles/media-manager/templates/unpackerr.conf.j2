# Unpackerr Example Configuration File
# The following values are application defaults.

# [true/false] Turn on debug messages in the output. Do not wrap this in quotes.
# Recommend trying this so you know what it looks like. I personally leave it on.
debug = true

# Disable writing messages to stdout. This silences the app. You should set a log
# file below if you set this to true.
quiet = false

# Write messages to a log file. This is the same data that is normally output to stdout.
# This setting is great for Docker users that want to export their logs to a file.
# The alternative is to use syslog to log the output of the application to a file.
# Default is no log file; this is unset. log_files=0 turns off auto-rotation.
# Default files is 10 and size(mb) is 10 Megabytes; both doubled if debug is true.
log_file = "{{ unpackerr_log_path }}"
log_files = 10
log_file_mb = 10

# How often to poll sonarr and radarr.
# Recommend 1m-5m. Uses Go Duration.
interval = "2m"

# How long to wait for a reply from the backends: Sonarr, Radarr, Lidarr.
# This can also be set per-app. Uses Go Duration.
timeout = "10s"

# How long ago a file must have been imported before deletion. The file must
# also not be part of an active queue item. Set this to "1m" to make sure files
# are deleted quickly after being imported. Recommend "5m". Uses Go Duration.
delete_delay = "5m"

# How long an item must be queued (download complete) before extraction will start.
# One minute is the historic default and works well. Set higher if your downloads
# take longer to finalize (or transfer locally). Uses Go Duration.
start_delay = "1m"

# How long to wait before removing the history for a failed extraction.
# Once the history is deleted the item will be recognized as new and
# extraction will start again. Uses Go Duration.
retry_delay = "5m"

# How many files may be extracted in parallel. 1 works fine.
# Do not wrap the number in quotes. Raise this only if you have fast disks and CPU.
parallel = 1

# Use these configurations to control the file modes used for newly extracted
# files and folders. Recommend 0644/0755 or 0666/0777.
file_mode = "0666"
dir_mode = "0777"

###
## The following sections can be repeated if you have more than one Sonarr,
## Radarr or Lidarr, Readarr, Folder or Webhook.
###

# Sends a webhook when an extraction starts and again when it finishes.
# Created to integrate with discordnotifier.com.
# Can possibly be used with other services. Don't forget to uncomment [[webhook]].
#[[webhook]]
#   url        = "https://discordnotifier.com/notifier.php?api=abcdef-ghijklmn-op"
#   name       = ""    # Set this to hide the URL in logs.
#   ignore_ssl = false # ignore certificate errors?
#   silent     = false # do not log success
#   events     = [0]   # list of event ids to include, 0 == all.
#   exclude    = []    # list of apps to exclude, ie. ["radarr", "lidarr"]

###
## You must uncomment the [[header]] and api_key at a minimum for *add apps.
###

 #TV Series / Episodes
[[sonarr]]
   url = "http://127.0.0.1:8989"
   api_key = "{{ sonarr_api }}"
   # File system path where downloaded Sonarr items are located.
   paths = ["{{ completed_downloads_path }}"]
 #Default protocols is torrent. Alternative: "torrent,usenet"
   protocols = "torrent"

 #Movies
[[radarr]]
  url = "http://127.0.0.1:7878"
  api_key = "{{ radarr_api }}"
   #    File system path where downloaded Radarr items are located.
  paths = ["{{ completed_downloads_path }}"]
 #Default protocols is torrents. Alternative: "torrent,usenet"
   protocols = "torrent"

# Music
#[[lidarr]]
#  url = "http://127.0.0.1:8686"
#  api_key = "32454256defd484ab2fdab2c15bc17af"
  # File system path where downloaded Lidarr items are located.
#  paths = ["/downloads"]
# Default protocols is torrent. Alternative: "torrent,usenet"
#   protocols = "torrent"

# Books
#[[readarr]]
#  url = "http://127.0.0.1:8787"
#  api_key = "123445defd484ab2fdab2c15babcd"
  # File system path where downloaded Lidarr items are located.
#  paths = ["/downloads"]
# Default protocols is torrent. Alternative: "torrent,usenet"
#   protocols = "torrent"

###
## This application can also watch folders for things to extract. If you copy a
## subfolder into a watched folder (defined below) any extractable items in the
## folder will be decompressed. This has *nothing* to do with Sonarr/Lidarr/Radarr.
###

#[[folder]]
#  path = "/some/folder/to/watch"
  # Delete extracted items this long after extraction. Set to 0 to disable. Uses Go Duration.
#  delete_after = "10m"
  # Delete original items after successful extraction? true/false, no quotes. Honors delete_after.
#  delete_original = false
  # Move extracted files into original folder? If false, files go into an _unpacked folder.
#  move_back = false