---

- name: Install Packages
  ansible.builtin.apt:
    name: ['curl', 'sqlite3', 'mediainfo', 'libchromaprint-tools']
    state: present

- name: Ensure media group exists
  ansible.builtin.group:
    name: media
    state: present

- name: Add Lidarr User
  ansible.builtin.user:
    name: "{{ lidarr_user }}"
    shell: /sbin/nologin
    group: "{{ media_group }}"

- name: Download Lidarr
  ansible.builtin.get_url:
    url: http://lidarr.servarr.com/v1/update/master/updatefile?os=linux&runtime=netcore&arch=x64
    dest: /tmp
    mode: 0766
    validate_certs: no

- name: Unpack Lidarr
  ansible.builtin.unarchive:
    src: '/tmp/Lidarr.master.{{ lidarr_version }}.linux-core-x64.tar.gz'
    group: "{{ media_group }}"
    owner: "{{ lidarr_user }}"
    dest: /tmp
    extra_opts:
    remote_src: yes

- name: Move Lidarr Directory
  ansible.builtin.copy:
    src: /tmp/Lidarr/
    dest: /opt/Lidarr
    group: "{{ media_group }}"
    owner: "{{ lidarr_user }}"
    remote_src: yes

- name: Change Lidarr Dir Ownership
  ansible.builtin.file:
    path: /opt/Lidarr
    state: directory
    recurse: yes
    owner: "{{ lidarr_user }}"
    group: "{{ media_group }}"

- name: Create var directory
  ansible.builtin.file:
    path: /var/lib/lidarr
    state: directory
    recurse: yes
    owner: "{{ lidarr_user }}"
    group: "{{ media_group }}"

- name: Copy Service File
  ansible.builtin.template:
    src: lidarr.service.j2
    dest: /etc/systemd/system/lidarr.service

- name: Add Lidarr Port
  community.general.ufw:
    port: 8686
    rule: allow
    proto: tcp

- name: Enable Lidarr Service
  ansible.builtin.systemd:
    name: lidarr
    daemon_reload: yes
    enabled: yes
    state: started

- name: Remove Lidarr package
  ansible.builtin.file:
    path: '/tmp/Lidarr.master.{{ lidarr_version }}.linux-core-x64.tar.gz'
    state: absent
